#！/bin/bash
setenforce 0
wget -r ftp://172.25.254.250/notes/project/UP200/UP200_cacti-master/pkg/ &> /dev/null

cd pkg
yum localinstall*.rpm &> /dev/null

htpasswd -cmb /etc/nagios/passwd nagiosadmin uplooking

systemctl restart httpd &> /dev/null
systemctl start nagios &> /dev/null

sed -i 's/host_name                       localhost/host_name                       servera21/' /etc/nagios/objects/localhost.cfg 
sed -i 's/address                 127.0.0.1/address                 172.25.21.10/' /etc/nagios/objects/localhost.cfg

sed -i 's/notifications_enabled		0/notifications_enabled		1/' /etc/nagios/objects/localhost.cfg

nagios -v /etc/nagios/nagios.cfg &> /dev/null && "语法正确！！！"
service nagios reload

cd /etc/nagios/objects/
cp localhost.cfg serverb21.cfg
cat > /etc/nagios/objects/serverb21.cfg <<END
define host{
        use                     linux-server
        host_name               serverb21
        alias                   nagios监控器
        address                 172.25.21.11
        }
define service{
        use                             local-service         ; Name of service template to use
        host_name                       serverb21
        service_description             PING
	check_command			check_ping!100.0,20%!500.0,60%
        }
define service{
        use                             local-service         ; Name of service template to use
        host_name                       serverb21
        service_description             Root Partition
	check_command			check_local_disk!20%!10%!/
        }
define service{
        use                             local-service         ; Name of service template to use
        host_name                       serverb21
        service_description             Current Users
	check_command			check_local_users!20!50
        }
define service{
        use                             local-service         ; Name of service template to use
        host_name                       serverb21
        service_description             Total Processes
	check_command			check_local_procs!250!400!RSZDT
        }
define service{
        use                             local-service         ; Name of service template to use
        host_name                       serverb21
        service_description             Current Load
	check_command			check_local_load!5.0,4.0,3.0!10.0,6.0,4.0
        }
define service{
        use                             local-service         ; Name of service template to use
        host_name                       serverb21
        service_description             Swap Usage
	check_command			check_local_swap!20!10
        }
define service{
        use                             local-service         ; Name of service template to use
        host_name                       serverb21
        service_description             SSH
	check_command			check_ssh
	notifications_enabled		1
        }
define service{
        use                             local-service         ; Name of service template to use
        host_name                       serverb21
        service_description             HTTP
	check_command			check_http
	notifications_enabled		1
        }
END

sed -i '$a cfg_file=/etc/nagios/objects/serverb21.cfg' /etc/nagios/nagios.cfg
systemctl restart nagios


expect <<EOF &> /dev/null
spawn ssh-keygen
expect "(/root/.ssh/id_rsa):"
send "\r"
expect "(empty for no passphrase):"
send "\r"
expect "again:"
send "\r"
expect "is:"
send "\n"
expect eof
EOF

expect <<EOF &> /dev/null
spawn ssh-copy-id root@172.25.21.11
expect "password:"
send "uplooking\r"
expect eof
EOF
ssh root@172.25.21.11

#编译nagios的插件
passwd nagios  <<EOF &> /dev/null
uplooking
uplooking
EOF

wget ftp://172.25.254.250/notes/project/software/nagios/nagios-plugins-1.4.14.tar.gz &> /dev/null && "nagios-plugins-1.4.14已下载成功"
tar xf nagios-plugins-1.4.14.tar.gz
cd nagios-plugins-1.4.14
yum -y install gcc openssl-devel xinetd &> /dev/null && "gcc openssl-devel xinetd已安装成功"
./configure
make 
make install
chown nagios.nagios /usr/local/nagios
chown -R nagios.nagios /usr/local/nagios/libexec

#编译nrpe服务
wget ftp：//172.25.254.250：/notes/project/software/nagios/nrpe-2.12.tar.gz
cd nrpe-2.12/
./configure
make all
make install-plugin
make install-daemon
make install-daemon-config
make install-xinetd
sed -i 'only_from       =.*/only_from       = 127.0.0.1 172.25.21.10/'  /etc/xinetd.d/nrpe
sed -i '$a nrpe            5666/tcp                # nrpe' /etc/services 
sed -i '$a command[check_sb]=/usr/local/nagios/libexec/check_swap -w 20% -c 10%' /usr/local/nagios/etc/nrpe.cfg

systemctl restart  xinetd &> /dev/null
netstat -tnlp |grep :5666
/usr/local/nagios/libexec/check_nrpe -H localhost

# 监控端:
ssh 172.25.21.10  <<EOF &> /dev/null
yes
uplooking
EOF

cat > /etc/nagios/objects/commands.cfg << END
define command{
	command_name	notify-host-by-email
	command_line	/usr/bin/printf "%b" "***** Nagios *****\n\nNotification Type: $NOTIFICATIONTYPE$\nHost: $HOSTNAME$\nState: $HOSTSTATE$\nAddress: $HOSTADDRESS$\nInfo: $HOSTOUTPUT$\n\nDate/Time: $LONGDATETIME$\n" | /usr/bin/mail -s "** $NOTIFICATIONTYPE$ Host Alert: $HOSTNAME$ is $HOSTSTATE$ **" $CONTACTEMAIL$
	}
define command{
	command_name	notify-service-by-email
	command_line	/usr/bin/printf "%b" "***** Nagios *****\n\nNotification Type: $NOTIFICATIONTYPE$\n\nService: $SERVICEDESC$\nHost: $HOSTALIAS$\nAddress: $HOSTADDRESS$\nState: $SERVICESTATE$\n\nDate/Time: $LONGDATETIME$\n\nAdditional Info:\n\n$SERVICEOUTPUT$\n" | /usr/bin/mail -s "** $NOTIFICATIONTYPE$ Service Alert: $HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$ **" $CONTACTEMAIL$
	}
define command{
        command_name    check-host-alive
        command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w 3000.0,80% -c 5000.0,100% -p 5
        }
define command{
        command_name    check_local_disk
        command_line    $USER1$/check_disk -w $ARG1$ -c $ARG2$ -p $ARG3$
        }
define command{
        command_name    check_local_load
        command_line    $USER1$/check_load -w $ARG1$ -c $ARG2$
        }
define command{
        command_name    check_local_procs
        command_line    $USER1$/check_procs -w $ARG1$ -c $ARG2$ -s $ARG3$
        }
define command{
        command_name    check_local_users
        command_line    $USER1$/check_users -w $ARG1$ -c $ARG2$
        }
define command{
	command_name	check_local_swap
	command_line	$USER1$/check_swap -w $ARG1$ -c $ARG2$
	}
define command{
	command_name	check_local_mrtgtraf
	command_line	$USER1$/check_mrtgtraf -F $ARG1$ -a $ARG2$ -w $ARG3$ -c $ARG4$ -e $ARG5$
	}
define command{
        command_name    check_ftp
        command_line    $USER1$/check_ftp -H $HOSTADDRESS$ $ARG1$
        }
define command{
        command_name    check_hpjd
        command_line    $USER1$/check_hpjd -H $HOSTADDRESS$ $ARG1$
        }
define command{
        command_name    check_snmp
        command_line    $USER1$/check_snmp -H $HOSTADDRESS$ $ARG1$
        }
define command{
        command_name    check_http
        command_line    $USER1$/check_http -I $HOSTADDRESS$ $ARG1$
        }
define command{
	command_name	check_ssh
	command_line	$USER1$/check_ssh $ARG1$ $HOSTADDRESS$
	}
define command{
	command_name	check_dhcp
	command_line	$USER1$/check_dhcp $ARG1$
	}
define command{
        command_name    check_ping
        command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w $ARG1$ -c $ARG2$ -p 5
        }
define command{
        command_name    check_pop
        command_line    $USER1$/check_pop -H $HOSTADDRESS$ $ARG1$
        }
define command{
        command_name    check_imap
        command_line    $USER1$/check_imap -H $HOSTADDRESS$ $ARG1$
        }
define command{
        command_name    check_smtp
        command_line    $USER1$/check_smtp -H $HOSTADDRESS$ $ARG1$
        }
define command{
	command_name	check_tcp
	command_line	$USER1$/check_tcp -H $HOSTADDRESS$ -p $ARG1$ $ARG2$
	}
define command{
	command_name	check_udp
	command_line	$USER1$/check_udp -H $HOSTADDRESS$ -p $ARG1$ $ARG2$
	}
define command{
	command_name	check_nt
	command_line	$USER1$/check_nt -H $HOSTADDRESS$ -p 12489 -v $ARG1$ $ARG2$
	}
define command{
	command_name	process-host-perfdata
	command_line	/usr/bin/printf "%b" "$LASTHOSTCHECK$\t$HOSTNAME$\t$HOSTSTATE$\t$HOSTATTEMPT$\t$HOSTSTATETYPE$\t$HOSTEXECUTIONTIME$\t$HOSTOUTPUT$\t$HOSTPERFDATA$\n" >> /var/log/nagios/host-perfdata.out
	}
define command{
	command_name	process-service-perfdata
	command_line	/usr/bin/printf "%b" "$LASTSERVICECHECK$\t$HOSTNAME$\t$SERVICEDESC$\t$SERVICESTATE$\t$SERVICEATTEMPT$\t$SERVICESTATETYPE$\t$SERVICEEXECUTIONTIME$\t$SERVICELATENCY$\t$SERVICEOUTPUT$\t$SERVICEPERFDATA$\n" >> /var/log/nagios/service-perfdata.out
	}
define command{
        command_name check_nrpe
        command_line $USER1$/check_nrpe -H $HOSTADDRESS$ -c $ARG1$
}
END

cat > /etc/nagios/objects/serverb21.cfg << END
define host{
        use                     linux-server
        host_name               serverb21
        alias                   serverb.pod21.example.com
        address                 172.25.21.11
        }
define service{
        use                             generic-service
        host_name                       serverb21
        service_description             SSH
	check_command			check_ssh
	notifications_enabled		1
        }
define service{
        use                             generic-service
        host_name                       serverb21
        service_description             HTTP
	check_command			check_http
	notifications_enabled		1
        }



define service{
        use generic-service
        host_name serverb21
        service_description load
        check_command check_nrpe!check_load
}
define service{
        use generic-service
        host_name serverb21
        service_description user
        check_command check_nrpe!check_users
}

define service{
        use generic-service
        host_name serverb21
        service_description disk
        check_command check_nrpe!check_vda1
}

define service{
        use generic-service
        host_name serverb21
        service_description zombie
        check_command check_nrpe!check_zombie_procs
}



define service{
        use generic-service
        host_name serverb21
        service_description procs
        check_command check_nrpe!check_total_procs
}


define service{
        use generic-service
        host_name serverb21
        service_description swap
        check_command check_nrpe!check_sb
}
END

nagios -v /etc/nagios/nagios.cfg &> /dev/null && "语法正确！！！"
/usr/lib64/nagios/plugins/check_nrpe -H 172.25.21.11
systemctl restart nagios


















